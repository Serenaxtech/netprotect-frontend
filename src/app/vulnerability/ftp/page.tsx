'use client';

import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { VulnerabilityData } from '@/types/vulnerability';

const mockData: VulnerabilityData = {
  scan_timestamp: "2025-04-20T15:30:45Z",
  servers_scanned: 3,
  ftp_servers_found: 2,
  vulnerable_servers: 1,
  results: [
    {
      hostname: "fileserver.adlab.local",
      port_open: true,
      anonymous_access: true,
      banner: "220 FileZilla Server 0.9.60 beta",
      ftp_bounce: true,
      allows_active_mode: true,
      allows_passive_mode: true,
      clear_text_credentials: true,
      directory_listing: ["public", "uploads", "backup"],
      version: "FileZilla 0.9.60",
      vulnerabilities: [
        "Anonymous Access Allowed",
        "FTP Bounce Attack",
        "Outdated FileZilla Server with multiple vulnerabilities"
      ],
      error: null
    },
    {
      hostname: "webserver.adlab.local",
      port_open: true,
      anonymous_access: false,
      banner: "220 Microsoft FTP Service",
      ftp_bounce: false,
      allows_active_mode: true,
      allows_passive_mode: true,
      clear_text_credentials: true,
      directory_listing: [],
      version: "Microsoft FTP 10.0",
      vulnerabilities: [],
      error: null
    }
  ]
};

export default function VulnerabilityPage() {
  return (
    <div className="space-y-6">
      <Card className="bg-[#111] border-gray-800 shadow-lg">
        <CardHeader className="space-y-4">
          <div className="text-gray-400 text-center text-sm">[ Vulnerability Assessment ]</div>
          <CardTitle className="text-2xl md:text-3xl font-bold text-center text-white">
            FTP Server Analysis
          </CardTitle>
          <p className="text-gray-400 text-center text-sm md:text-base">
            Scan completed on {new Date(mockData.scan_timestamp).toLocaleString()}
          </p>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
            <Card className="bg-[#1A1A1A] border-gray-800">
              <CardHeader>
                <CardTitle className="text-xl text-white text-center">{mockData.servers_scanned}</CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-gray-400 text-center">Servers Scanned</p>
              </CardContent>
            </Card>
            <Card className="bg-[#1A1A1A] border-gray-800">
              <CardHeader>
                <CardTitle className="text-xl text-white text-center">{mockData.ftp_servers_found}</CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-gray-400 text-center">FTP Servers Found</p>
              </CardContent>
            </Card>
            <Card className="bg-[#1A1A1A] border-gray-800">
              <CardHeader>
                <CardTitle className="text-xl text-white text-center">{mockData.vulnerable_servers}</CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-gray-400 text-center">Vulnerable Servers</p>
              </CardContent>
            </Card>
          </div>

          <div className="space-y-6">
            {mockData.results.map((server, index) => (
              <Card key={server.hostname} className="bg-[#1A1A1A] border-gray-800">
                <CardHeader>
                  <CardTitle className="text-xl text-white flex justify-between items-center">
                    <span>{server.hostname}</span>
                    <span className={`text-sm px-3 py-1 rounded ${server.vulnerabilities.length > 0 ? 'bg-red-600' : 'bg-green-600'}`}>
                      {server.vulnerabilities.length > 0 ? 'Vulnerable' : 'Secure'}
                    </span>
                  </CardTitle>
                </CardHeader>
                <CardContent className="space-y-4">
                  <div className="grid grid-cols-2 gap-4 text-sm">
                    <div className="text-gray-400">Version:</div>
                    <div className="text-white">{server.version}</div>
                    <div className="text-gray-400">Banner:</div>
                    <div className="text-white">{server.banner}</div>
                    <div className="text-gray-400">Anonymous Access:</div>
                    <div className="text-white">{server.anonymous_access ? 'Yes' : 'No'}</div>
                    <div className="text-gray-400">FTP Bounce:</div>
                    <div className="text-white">{server.ftp_bounce ? 'Yes' : 'No'}</div>
                    <div className="text-gray-400">Clear Text Credentials:</div>
                    <div className="text-white">{server.clear_text_credentials ? 'Yes' : 'No'}</div>
                  </div>

                  {server.vulnerabilities.length > 0 && (
                    <div className="mt-4">
                      <h4 className="text-red-500 font-medium mb-2">Vulnerabilities Found:</h4>
                      <ul className="list-disc list-inside space-y-1">
                        {server.vulnerabilities.map((vuln, i) => (
                          <li key={i} className="text-gray-300">{vuln}</li>
                        ))}
                      </ul>
                    </div>
                  )}

                  {server.directory_listing.length > 0 && (
                    <div className="mt-4">
                      <h4 className="text-yellow-500 font-medium mb-2">Accessible Directories:</h4>
                      <div className="flex flex-wrap gap-2">
                        {server.directory_listing.map((dir, i) => (
                          <span key={i} className="bg-gray-800 px-2 py-1 rounded text-gray-300">{dir}</span>
                        ))}
                      </div>
                    </div>
                  )}
                </CardContent>
              </Card>
            ))}
          </div>
        </CardContent>
      </Card>
    </div>
  );
}